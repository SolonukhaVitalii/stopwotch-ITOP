{"version":3,"sources":["utils/helpers.js","components/Controls.jsx","App.jsx","index.jsx"],"names":["setTimeFormat","totalSecs","seconds","minutes","Math","floor","hours","hoursFormat","minutesFormat","secondsFormant","Controls","time","start","stop","reset","wait","className","type","onClick","App","useState","state","setState","setTime","stop$","useMemo","Subject","click$","useCallback","next","useEffect","doubleClick$","pipe","buffer","debounceTime","map","list","length","filter","value","subscribtion$","Observable","observer","count","intervalId","setInterval","console","log","clearInterval","takeUntil","subscribe","prev","unsubscribe","ReactDOM","render","document","getElementById"],"mappings":"sOAeeA,MAff,SAAuBC,GACrB,IAAMC,EAAWD,EAAY,GACvBE,EAAUC,KAAKC,MAAMJ,EAAY,IACjCK,EAAQF,KAAKC,MAAMJ,EAAY,MAC/BM,EAAeD,EAAQ,GAAKA,EAAQ,GACtC,KACCA,GAAS,GAAKA,GAAS,EAAxB,WAAiCA,GAAjC,UAA8CA,GAC5CE,EAAiBL,EAAU,GACf,IAAZA,EAAiB,KAAlB,WAA6BA,GADZ,UAEfA,GACDM,EAAkBP,EAAU,GAAX,WAAqBA,GAArB,UAAoCA,GAE3D,MAAM,GAAN,OAAUK,EAAV,YAAyBC,EAAzB,YAA0CC,I,OCR/BC,EAAW,SAAC,GAAD,IACtBC,EADsB,EACtBA,KACAC,EAFsB,EAEtBA,MACAC,EAHsB,EAGtBA,KACAC,EAJsB,EAItBA,MACAC,EALsB,EAKtBA,KALsB,OAOtB,qCACE,yBAAQC,UAAU,SAAlB,UACE,oBAAIA,UAAU,qBAAd,uBAGA,oBAAIA,UAAU,sBAAd,SACGhB,EAAcW,QAGnB,yBAASK,UAAU,OAAnB,SACE,sBAAKA,UAAU,YAAf,UACE,wBAAQC,KAAK,SAASD,UAAU,iBAAiBE,QAASN,EAA1D,mBAGA,wBAAQK,KAAK,SAASD,UAAU,iBAAiBE,QAASL,EAA1D,kBAGA,wBAAQI,KAAK,SAASD,UAAU,iBAAiBE,QAASJ,EAA1D,mBAGA,wBAAQG,KAAK,SAASD,UAAU,iBAAiBE,QAASH,EAA1D,2BC2DOI,EAzEH,WACV,MAA0BC,mBAAS,QAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,GAAjC,mBAAOT,EAAP,KAAaY,EAAb,KAEMC,EAAQC,mBAAQ,kBAAM,IAAIC,MAAW,IACrCC,EAASF,mBAAQ,kBAAM,IAAIC,MAAW,IAMtCb,EAAOe,uBAAY,WACvBL,EAAQ,GACRD,EAAS,UACR,IAEGR,EAAQc,uBAAY,WACxBL,EAAQ,KACP,IAEGR,EAAOa,uBAAY,WACvBD,EAAOE,OACPP,EAAS,QACTK,EAAOE,SACN,IAoCH,OAlCAC,qBAAU,WACR,IAAMC,EAAeJ,EAAOK,KAC1BC,YAAON,EAAOK,KAAKE,YAAa,OAChCC,aAAI,SAACC,GAAD,OAAUA,EAAKC,UACnBC,aAAO,SAACC,GAAD,OAAWA,GAAS,MAcvBC,EAZS,IAAIC,KAAW,SAACC,GAC7B,IAAIC,EAAQ,EACNC,EAAaC,aAAY,WAC7BH,EAASb,KAAKc,GAAS,GACvBG,QAAQC,IAAIJ,KACX,KAEH,OAAO,WACLK,cAAcJ,OAKfZ,KAAKiB,YAAUlB,IACfC,KAAKiB,YAAUzB,IACf0B,UAAU,CACTrB,KAAM,WACU,UAAVR,GACFE,GAAQ,SAAC4B,GAAD,OAAUA,EAAO,QAKjC,OAAQ,WACNX,EAAcY,iBAEf,CAAC/B,IAGF,yBAASL,UAAU,YAAnB,SACE,cAAC,EAAD,CACEL,KAAMA,EACNC,MAzDQ,WACZU,EAAS,UAyDLT,KAAMA,EACNC,MAAOA,EACPC,KAAMA,OC9EdsC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.efa08b38.chunk.js","sourcesContent":["function setTimeFormat(totalSecs) {\r\n  const seconds = (totalSecs % 60);\r\n  const minutes = Math.floor(totalSecs / 60);\r\n  const hours = Math.floor(totalSecs / 3600);\r\n  const hoursFormat = (hours < 1 || hours > 23)\r\n    ? '00'\r\n    : (hours >= 1 && hours <= 9) ? `0${hours}` : `${hours}`;\r\n  const minutesFormat = (minutes < 10)\r\n    ? ((minutes === 0) ? '00' : `0${minutes}`)\r\n    : `${minutes}`;\r\n  const secondsFormant = (seconds < 10) ? `0${seconds}` : `${seconds}`;\r\n\r\n  return `${hoursFormat}:${minutesFormat}:${secondsFormant}`;\r\n}\r\n\r\nexport default setTimeFormat;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport setTimeFormat from '../utils/helpers';\r\n\r\nexport const Controls = ({\r\n  time,\r\n  start,\r\n  stop,\r\n  reset,\r\n  wait,\r\n}) => (\r\n  <>\r\n    <header className=\"header\">\r\n      <h1 className=\"stopwatch headline\">\r\n        STOPWATCH\r\n      </h1>\r\n      <h1 className=\"stopwatch indicator\">\r\n        {setTimeFormat(time)}\r\n      </h1>\r\n    </header>\r\n    <section className=\"main\">\r\n      <div className=\"container\">\r\n        <button type=\"button\" className=\"button is-dark\" onClick={start}>\r\n          Start\r\n        </button>\r\n        <button type=\"button\" className=\"button is-dark\" onClick={stop}>\r\n          Stop\r\n        </button>\r\n        <button type=\"button\" className=\"button is-dark\" onClick={reset}>\r\n          Reset\r\n        </button>\r\n        <button type=\"button\" className=\"button is-dark\" onClick={wait}>\r\n          Wait\r\n        </button>\r\n      </div>\r\n    </section>\r\n  </>\r\n);\r\n\r\nControls.propTypes = {\r\n  time: PropTypes.number.isRequired,\r\n  start: PropTypes.func.isRequired,\r\n  stop: PropTypes.func.isRequired,\r\n  reset: PropTypes.func.isRequired,\r\n  wait: PropTypes.func.isRequired,\r\n};","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useState,\r\n  useMemo,\r\n} from 'react';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport {\r\n  map,\r\n  buffer,\r\n  debounceTime,\r\n  filter,\r\n  takeUntil,\r\n} from 'rxjs/operators';\r\n\r\nimport { Controls } from './components/Controls';\r\n\r\nconst App = () => {\r\n  const [state, setState] = useState('stop');\r\n  const [time, setTime] = useState(0);\r\n\r\n  const stop$ = useMemo(() => new Subject(), []);\r\n  const click$ = useMemo(() => new Subject(), []);\r\n\r\n  const start = () => {\r\n    setState('start');\r\n  };\r\n\r\n  const stop = useCallback(() => {\r\n    setTime(0);\r\n    setState('stop');\r\n  }, []);\r\n\r\n  const reset = useCallback(() => {\r\n    setTime(0);\r\n  }, []);\r\n\r\n  const wait = useCallback(() => {\r\n    click$.next();\r\n    setState('wait');\r\n    click$.next();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const doubleClick$ = click$.pipe(\r\n      buffer(click$.pipe(debounceTime(300))),\r\n      map((list) => list.length),\r\n      filter((value) => value >= 2),\r\n    );\r\n    const timer$ = new Observable((observer) => {\r\n      let count = 0;\r\n      const intervalId = setInterval(() => {\r\n        observer.next(count += 1);\r\n        console.log(count);\r\n      }, 1000);\r\n\r\n      return () => {\r\n        clearInterval(intervalId);\r\n      };\r\n    });\r\n\r\n    const subscribtion$ = timer$\r\n      .pipe(takeUntil(doubleClick$))\r\n      .pipe(takeUntil(stop$))\r\n      .subscribe({\r\n        next: () => {\r\n          if (state === 'start') {\r\n            setTime((prev) => prev + 1);\r\n          }\r\n        },\r\n      });\r\n\r\n    return (() => {\r\n      subscribtion$.unsubscribe();\r\n    });\r\n  }, [state]);\r\n\r\n  return (\r\n    <section className=\"stopwatch\">\r\n      <Controls\r\n        time={time}\r\n        start={start}\r\n        stop={stop}\r\n        reset={reset}\r\n        wait={wait}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './styles/index.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);"],"sourceRoot":""}